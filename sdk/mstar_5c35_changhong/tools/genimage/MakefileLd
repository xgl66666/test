.PHONY: all zip setup clean

UNAME=$(shell uname)

UNZIP_RAM_BASE ?= 0x82EB0044
IMAGE_BIN ?= Downloader
IMAGE_ZIP ?= Downloader.bin
ZIP_APP_BIN ?= 0x81100180
ZIP_APP_BIN_ENTRY ?= 0x81100224

#TOOLCHAIN  ?= mips-linux-gnu
TOOLCHAIN  ?= mipsisa32-elf
CC         := $(TOOLCHAIN)-gcc
LD         := $(TOOLCHAIN)-ld
OBJCOPY    := $(TOOLCHAIN)-objcopy
OBJDUMP    := $(TOOLCHAIN)-objdump
SIZE       := $(TOOLCHAIN)-size
NM         := $(TOOLCHAIN)-nm
AS         := $(TOOLCHAIN)-as
TOOL_ENTRY := ../tools

CFLAGS := -EL -mips32r2 -mhard-float -gdwarf-2 -O2 -G0 -nostdlib -static \
	-fno-optimize-sibling-calls -ffunction-sections -fdata-sections -fno-exceptions \
	-I. -I./cpu/mips34k -Wa,-I./cpu/mips34k

SRC := LzmaDecMain.c LzmaDec.c zipbin.s cache.s
#KRONUS_U04 = enable
KRONUS_U04 = disable
ifeq ($(KRONUS_U04),enable)
CFLAGS += -D'ENABLE_KRONUS_U04'
endif

all: setup zip
	@$(CC) -P -E '-DUNZIP_RAM_BASE=$(UNZIP_RAM_BASE)' -o out/ld_link.ld ld_link.ld.S
	@$(CC) $(CFLAGS) -Wl,-Map,out/ld_unzip.map -T out/ld_link.ld -o out/ld_unzip.elf $(SRC)
	@$(OBJDUMP) -S out/ld_unzip.elf > out/ld_unzip.dis
#	@rm out/$(IMAGE_ZIP)
	@$(OBJCOPY) -O binary out/ld_unzip.elf out/$(IMAGE_ZIP)
	@rm $(IMAGE_ZIP)
	@sh add_header_ld.sh
zip:
	@echo "  [ZIP] $(IMAGE_BIN)"
ifeq ($(UNAME),Linux)
	@$(TOOL_ENTRY)/lzma e $(IMAGE_BIN) $(IMAGE_ZIP)
else
	@$(TOOL_ENTRY)/lzma.exe e '$(shell cygpath -w $(IMAGE_BIN))' '$(shell cygpath -w $(IMAGE_ZIP))'
endif

setup:
	@mkdir out 2> /dev/null || true
	@echo -e '.section .zipbin, "a"\n.incbin' '"$(IMAGE_ZIP)"' > zipbin.s
	@echo -e '#define ZIP_APP_BIN $(ZIP_APP_BIN)' > zipbin.h
	@echo -e '#define ZIP_APP_BIN_ENTRY $(ZIP_APP_BIN_ENTRY)' >> zipbin.h

clean:
	rm -rf out/*
