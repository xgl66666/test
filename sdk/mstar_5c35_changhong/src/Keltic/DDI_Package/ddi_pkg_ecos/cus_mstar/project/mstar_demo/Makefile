
################################################################################
#
# Copyright (c) 2008-2009 MStar Semiconductor, Inc.
# All rights reserved.
#
# Unless otherwise stipulated in writing, any and all information contained
# herein regardless in any format shall remain the sole proprietary of
# MStar Semiconductor Inc. and be kept in strict confidence
# ("MStar Confidential Information") by the recipient.
# Any unauthorized act including without limitation unauthorized disclosure,
# copying, use, reproduction, sale, distribution, modification, disassembling,
# reverse engineering and compiling of the contents of MStar Confidential
# Information is unlawful and strictly prohibited. MStar hereby reserves the
# rights to any and all damages, losses, costs and expenses resulting therefrom.
#
#
# Makefile used for building application.
#
# The default target (all) builds application in three formats :
#   *.rec : Image in S-record format.
#   *.bin : Image in binary format.
#   *.elf : Image in ELF format.
#   *.map : Linker generated map file.
#   *.dis : Disassembly of image.
#   *.sym : Symbols.
#
# Other targets are :
#   clean :    Deletes all files generated by makefile.
#
#
################################################################################
SHELL=/bin/bash
export

# **********************************************
# Import configure file
# **********************************************
PRJ_DIR     = $(CURDIR)
-include $(PRJ_DIR)/config
-include $(PRJ_DIR)/cus_config/configure_define

ifeq ($(MI_BSP),disable)
TARGET_MK=target.mk
else
TARGET_MK=mi.mk
endif

# **********************************************
# Directories
# **********************************************
BSP_PRJ     = $(PRJ_DIR)/../../../project/$(CHIP)_$(OS_TYPE)
IMAGE_BIN   = bin/$(IMAGENAME).bin
IMAGE_ZIP   = bin/$(IMAGENAME).zip
# **********************************************
# Rules
# **********************************************
.PHONY : all library package image

# Project Build
all : makeBsp makeImg
	cp bin/keltic_ecos.bin ../../../boot/sboot/keltic_ecos.bin;\
	cp bin/keltic_ecos.elf ../../../boot/sboot/keltic_ecos.elf;\
	./crc.sh
	$(MAKE) -C ../../../boot/unzip IMAGE_BIN=$(shell readlink -f $(IMAGE_BIN)) IMAGE_ZIP=$(shell readlink -f $(IMAGE_ZIP)) ZIP_APP_BIN=0x80000180 ZIP_APP_BIN_ENTRY=0x80000200
	cd ../../../boot/mboot/; \
	printf "FPU_ENABLE=%d \n" $(FPU_ENABLE) >> cfg_board.inc; \
	printf "CFG_BOARD=%s \n" $(CFG_BOARD) >> cfg_board.inc; \
	printf "CFG_CHIP_SELECTION=%s \n" $(CFG_CHIP_SELECTION) >> cfg_board.inc; \
	printf "CFG_DVB_TYPE=%s \n" $(CFG_DVB_TYPE)>> cfg_board.inc; \
	printf "ZIP_BIN=%s/%s \n" $(CURDIR) $(IMAGE_ZIP) >> cfg_board.inc; \
	printf "CFG_DDR_FREQ=%s \n" $(CFG_DDR_FREQ) >> cfg_board.inc; \
	sh boot.sh; \
	cd -;
	echo "Generate flash Image with mboot Done"
	cd ../../../boot/sboot;\
	printf "CFG_BOARD=%s \n" $(CFG_BOARD) >> cfg_board.inc; \
	printf "CFG_CHIP_SELECTION=%s \n" $(CFG_CHIP_SELECTION) >> cfg_board.inc; \
	./build_keltic.sh;\
	rm keltic_ecos.bin;\
	rm keltic_ecos.elf;\
	cd -;\
	echo "build done";


makeBsp : library package

makeImg : image


# Project Image Build
image :
	@$(MAKE) -f $(TARGET_MK) $(filter-out,clean,$(MAKECMDGOALS)) 2>&1 | tee make.log

# Project Library Package
package :
	@if [ -d $(BSP_PRJ) ];\
		then $(MAKE) -s -C $(BSP_PRJ) bsp;\
	fi

# Project Library Build
library :
	@if [ -d $(BSP_PRJ) ];\
		then $(MAKE) -s -C $(BSP_PRJ);\
	fi

# Project Clean
clean :
	@$(MAKE) -s -f $(TARGET_MK) clean
	@if [ -d ../../../project/$(CHIP)_$(OS_TYPE) ];\
		then $(MAKE) -s -C $(BSP_PRJ) clean;\
	fi
	@echo "Remove CFG file";\
	rm -f ../../../boot/mboot/cfg_board.inc;\
	rm -f ../../../boot/sboot/cfg_board.inc;\
	
setup :
ifeq ($(MI_BSP),enable)
	@$(MAKE) -s -f mi.mk setup
endif
