/**********************************************************
 * apdutagstemplate.h
 *
 *   Copyright: Rabbit Labs 2010-2016
 **********************************************************/

#ifndef MK_APDU_TAG
#define  MK_APDU_TAG(lowercase_rsc, uppercase_rsc, lowercase_apdu_name, uppercase_apdu_name, tag, flags, direction)
#endif

// ================== resource manager =====================
MK_APDU_TAG(ResourceManager, RSCMGR, profile_enq, PROFILEENQ, 0x9F8010, SPEC_ALL, DIRECTION_BOTH) // EN50221, TS 101 699
MK_APDU_TAG(ResourceManager, RSCMGR, profile, PROFILE, 0x9F8011, SPEC_ALL, DIRECTION_BOTH)  // EN50221, TS 101 699
MK_APDU_TAG(ResourceManager, RSCMGR, profile_change, PROFILECHANGE, 0x9F8012, SPEC_ALL, DIRECTION_BOTH)  // EN50221, TS 101 699
MK_APDU_TAG(ResourceManager, RSCMGR, CICAM_ID_Send, CICAM_ID_SEND, 0x9F8013, SPEC_ALL, DIRECTION_CAM_TO_HOST)  // TS 101 699
MK_APDU_TAG(ResourceManager, RSCMGR, CICAM_ID_Command, CICAM_ID_COMMAND, 0x9F8014, SPEC_ALL, DIRECTION_HOST_TO_CAM)  // TS 101 699

//  ===================== application information  =====================
MK_APDU_TAG(ApplicationInfo, APPINFO, application_info_enq, ENQ, 0x9F8020, SPEC_ALL, DIRECTION_HOST_TO_CAM)  // EN50221, TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationInfo, APPINFO, application_info, REPLY, 0x9F8021, SPEC_ALL, DIRECTION_CAM_TO_HOST)  // EN50221, TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationInfo, APPINFO, enter_menu, ENTERMENU, 0x9F8022, SPEC_ALL, DIRECTION_HOST_TO_CAM)  // EN50221, TS 101 699, CI+ 1.3, TS 103 205
// @@RBL_MACRO_CIPLUS_START
MK_APDU_TAG(ApplicationInfo, APPINFO, request_CICAM_reset, REQUESTRESET, 0x9F8023, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST) // CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationInfo, APPINFO, data_rate_info, DATARATEINFO, 0x9F8024, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM) // CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationInfo, APPINFO, enter_cicam_channel, ENTER_CICAM_CHANNEL, 0x9F8025, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // TS 103 205
// @@RBL_MACRO_CIPLUS_END

// ===================== authentication =====================
MK_APDU_TAG(Authentication, AUTH, authentication_request, REQUEST, 0x9F8200, SPEC_ALL, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(Authentication, AUTH, authentication_response, RESPONSE, 0x9F8201, SPEC_ALL, DIRECTION_CAM_TO_HOST) // TS 103 205

// ===================== CA Support =====================
MK_APDU_TAG(CASupport, CASUPP, ca_info_enq, INFOENQ, 0x9F8030,  SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, TS 103 205
MK_APDU_TAG(CASupport, CASUPP, ca_info, INFO, 0x9F8031, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(CASupport, CASUPP, ca_pmt, PMT, 0x9F8032, SPEC_ALL, DIRECTION_HOST_TO_CAM)// EN50221, TS 103 205
MK_APDU_TAG(CASupport, CASUPP, ca_pmt_reply, PMTREPLY, 0x9F8033, SPEC_ALL, DIRECTION_CAM_TO_HOST)// EN50221, TS 103 205

// ===================== date time =====================
MK_APDU_TAG(DateTime, DATETIME, date_time_enq, DATETIMEENQ, 0x9F8440, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(DateTime, DATETIME, date_time, DATETIME, 0x9F8441, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221

// ===================== host control =====================
MK_APDU_TAG(HostControl, HOSTCTRL, tune, TUNE,0x9F8400, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, replace, REPLACE, 0x9F8401,  SPEC_ALL, DIRECTION_CAM_TO_HOST)// EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, clear_replace, CLEARREPLACE,  0x9F8402, SPEC_ALL, DIRECTION_CAM_TO_HOST)// EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, ask_release, ASKRELEASE, 0x9F8403, SPEC_ALL, DIRECTION_HOST_TO_CAM)// EN50221, CI+ 1.3, TS 103 205
// @@RBL_MACRO_CIPLUS_START
MK_APDU_TAG(HostControl, HOSTCTRL, tune_broadcast_req, TUNEBROADCASTREQ, 0x9F8404, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST) // CI+ 1.3, TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, tune_reply, TUNEREPLY, 0x9F8405, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, ask_release_reply, ASKRELEASEREPLY, 0x9F8406, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, tune_lcn_req, LCN_REQ, 0x9F8407, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, tune_ip_req, IP_REQ, 0x9F8408, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, tune_tripley_req, TRIPLET_REQ, 0x9F8409, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, tune_status_req, STATUS_REQ, 0x9F840A, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205
MK_APDU_TAG(HostControl, HOSTCTRL, tune_status_reply, STATUS_REPLY, 0x9F840B, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // TS 103 205
// @@RBL_MACRO_CIPLUS_END

// ===================== low speed communication =====================
MK_APDU_TAG(LowSpeedComms, COMMS, comms_cmd, CMD, 0x9F8C00, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, connection_descriptor, CONNDESCRIPTOR, 0x9F8C01, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_reply, REPLY, 0x9F8C02, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_send_last, SENDLAST, 0x9F8C03, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_send_more, SENDMORE, 0x9F8C04, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_rcv_last, RCVLAST, 0x9F8C05, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, CI+ 1.3, TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_rcv_more, RCVMORE, 0x9F8C06, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, CI+ 1.3, TS 103 205
// @@RBL_MACRO_CIPLUS_START
MK_APDU_TAG(LowSpeedComms, COMMS, comms_info_req, INFO_REQ, 0x9F8C07, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_info_reply, INFO_REPLY, 0x9F8C08, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_IP_config_req, IP_CONFIG_REQ, 0x9F8C09, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205
MK_APDU_TAG(LowSpeedComms, COMMS, comms_IP_config_reaply, IP_CONFIG_REPLY, 0x9F8C0A, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // TS 103 205
// @@RBL_MACRO_CIPLUS_END

// ===================== MMI =====================
MK_APDU_TAG(MMI, MMI, close_mmi, CLOSEMMI, 0x9F8800, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, display_control, DISPLAYCONTROL, 0x9F8801, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, display_reply, DISPLAYREPLY, 0x9F8802, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, text_last, TEXTLAST, 0x9F8803, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, text_more, TEXTMORE, 0x9F8804, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, keypas_control, KEYPADCONTROL, 0x9F8805, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, keypress, KEYPRESS, 0x9F8806, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221
MK_APDU_TAG(MMI, MMI, enq, ENQ, 0x9F8807, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, anws, ANSW, 0x9F8808,SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, menu_last, MENULAST, 0x9F8809, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, menu_more, MENUMORE, 0x9F880A, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, menu_anws, MENUANSW, 0x9F880B, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, list_last, LISTLAST, 0x9F880C, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, list_more, LISTMORE, 0x9F880D, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221, TS 103 205
MK_APDU_TAG(MMI, MMI, subtible_segment_last, SUBTITLESEGMENTLAST, 0x9F880E, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, subtitle_segment_more, SUBTITLESEGMENTMORE, 0x9F880F, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, display_message, DISPLAYMESSAGE, 0x9F8810, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, scene_end_mark, SCENEENDMARK, 0x9F8811, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, scene_done, SCENEDONE, 0x9F8812, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, scene_control, SCENECONTROL, 0x9F8813, SPEC_ALL, DIRECTION_HOST_TO_CAM) // EN50221
MK_APDU_TAG(MMI, MMI, subtitle_download_last, SUBTITLEDOWNLOADLAST, 0x9F8814, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, subtitle_download_more, SUBTITLEDOWNLOADMORE, 0x9F8815, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, flush_download, FLUSHDOWNLOAD, 0x9F8816, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221
MK_APDU_TAG(MMI, MMI, download_reply, DOWNLOADREPLY, 0x9F8817, SPEC_ALL, DIRECTION_CAM_TO_HOST) // EN50221

// @@RBL_MACRO_CIPLUS_START
// ===================== application MMI =====================
MK_APDU_TAG(ApplicationMMI, APPMMI, RequestStart, REQSTART, 0x9F8000, SPEC_TS101699_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationMMI, APPMMI, RequestStartAck, REQSTARTACK, 0x9F8001, SPEC_TS101699_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationMMI, APPMMI, FileReq, FILEREQ, 0x9F8002, SPEC_TS101699_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationMMI, APPMMI, FileAck, FILEACK, 0x9F8003, SPEC_TS101699_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationMMI, APPMMI, AppAbortReq, APPABORTREQ, 0x9F8004, SPEC_TS101699_AND_HIGHER, DIRECTION_BOTH) // TS 101 699, CI+ 1.3, TS 103 205
MK_APDU_TAG(ApplicationMMI, APPMMI, AppAbortAck, APPABORTACK, 0x9F8005, SPEC_TS101699_AND_HIGHER, DIRECTION_BOTH) // TS 101 699, CI+ 1.3, TS 103 205

// ===================== CAM Upgrade =====================
MK_APDU_TAG(CAMUpgrade, CAM, cicam_firmware_upgrade, UPGRADE, 0x9F9D01, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST) // CI+ 1.3
MK_APDU_TAG(CAMUpgrade, CAM, cicam_firmware_upgrade_reply, UPGRADEREPLY, 0x9F9D02, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3
MK_APDU_TAG(CAMUpgrade, CAM, cicam_firmware_upgrade_progress, UPGRADEPROGRESS, 0x9F9D03, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3
MK_APDU_TAG(CAMUpgrade, CAM, cicam_firmware_upgrade_complete, UPGRADECOMPLETE, 0x9F9D04, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3

// ===================== Host language =====================
MK_APDU_TAG(HostLanguage, HOSTLANG, Host_country_enq, COUNTRYENQ, 0x9F8100, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3
MK_APDU_TAG(HostLanguage, HOSTLANG, Host_country, COUNTRY, 0x9F8101, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3
MK_APDU_TAG(HostLanguage, HOSTLANG, Host_language_enq, LANGUAGEENQ, 0x9F8110, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3
MK_APDU_TAG(HostLanguage, HOSTLANG, Hots_language, LANGUAGE, 0x9F8111, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3

// ===================== Content control =====================
MK_APDU_TAG(ContentControl, CC, cc_open_req, OPEN_REQ, 0x9F9001, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_open_cnf, OPEN_CNF, 0x9F9002, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_data_req, DATA_REQ, 0x9F9003, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_data_cnf, DATA_CNF, 0x9F9004, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_sync_req, SYNC_REQ, 0x9F9005, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_sync_cnf, SYNC_CNF, 0x9F9006, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_sac_data_req, SAC_DATA_REQ, 0x9F9007, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_sac_data_cnf, SAC_DATA_CNF, 0x9F9008, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_sac_sync_req, SAC_SYNC_REQ, 0x9F9009, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_sac_sync_cnf, SAC_SYNC_CNF, 0x9F9010, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_capabilities_req, PIN_CAPABILITIES_REQ, 0x9F9011, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_capabilities_reply, PIN_CAPABILITIES_REPLY, 0x9F9012, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_cmd, PIN_CMD, 0x9F9013, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_reply, PIN_REPLY, 0x9F9014, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_event, PIN_EVENT, 0x9F9015, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_playback, PIN_PLAYBACK, 0x9F9016, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(ContentControl, CC, cc_PIN_MMI_req, PIN_MMI_REQ, 0x9F9017, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205

// ===================== operator profile =====================
MK_APDU_TAG(OperatorProfile, OPPROF, operator_status_req ,STATUSREQ, 0x9F9C00, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_status ,STATUS, 0x9F9C01, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_nit_req ,NITREQ, 0x9F9C02, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_nit ,NIT, 0x9F9C03, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_info_req ,INFOREQ, 0x9F9C04, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_info ,INFO, 0x9F9C05, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_search_start ,SEARCHSTART, 0x9F9C06, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_search_status ,SEARCHSTATUS, 0x9F9C07, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_exit ,EXIT, 0x9F9C08, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_tune ,TUNE, 0x9F9C09, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_tune_status ,TUNESTATUS, 0x9F9C0A, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_entitlement_ack ,ENTITLEMENTACK, 0x9F9C0B, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_search_cancel ,SEARCHCANCEL, 0x9F9C0C, SPEC_CIPLUS1_3_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3, TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_osdt_request ,OSDT_REQUEST, 0x9F9C0D, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_osdt_reply ,OSDT_REPLY, 0x9F9C0E, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(OperatorProfile, OPPROF, operator_nit_management ,NIT_MANAGEMENT, 0x9F9C0F, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205

// ===================== SAS =====================
MK_APDU_TAG(SAS, SAS, SAS_connect_rqst, CONNECTRQST, 0x9F9A00, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_HOST_TO_CAM)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_connect_cnf, CONNECTCNF, 0x9F9A01, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_data_rqst, DATA_RQST, 0x9F9A02, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_BOTH)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_data_av, DATA_AV, 0x9F9A03, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_BOTH)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_data_cnf, DATA_CNF, 0x9F9A04, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_BOTH)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_server_query, SERVER_QUERY, 0x9F9A05, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_BOTH)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_server_reply, SERVER_REPLY, 0x9F9A06, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_BOTH)  // CI+ 1.3
MK_APDU_TAG(SAS, SAS, SAS_async_msg, ASYNCMSG, 0x9F9A07, SPEC_CIPLUS1_2_AND_HIGHER, DIRECTION_BOTH)  // CI+ 1.3

// ===================== Multistream =====================
MK_APDU_TAG(MultiStream, MULTISTREAM, CICAM_multistream_capabilities, CICAM_MULTISTREAM_CAPABILITIES, 0x9F9200, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(MultiStream, MULTISTREAM, PID_select_req, PID_SELECT_REQ, 0x9F9201, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(MultiStream, MULTISTREAM, PID_select_reply, PID_SELECT_REPLY, 0x9F9202, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205

// ===================== Auxilliary file system =====================
MK_APDU_TAG(AuxilliaryFileSystem, AUXFS, FileSystemOffer, FILESYSTEMOFFER, 0x9F9400, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(AuxilliaryFileSystem, AUXFS, FileSystemAck, FILESYSTEMACK, 0x9F9401, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(AuxilliaryFileSystem, AUXFS, FileRequest, FILEREQUEST, 0x9F9402, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(AuxilliaryFileSystem, AUXFS, FileAcknowledge, FILEACKNOWLEDGE, 0x9F9403, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205

// ===================== sample decryption =====================
MK_APDU_TAG(SampleDecryption, SAMPLEDECRYPTION, sd_info_req, INFO_REQ, 0x9F9800, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(SampleDecryption, SAMPLEDECRYPTION, sd_info_reply, INFO_REPLY, 0x9F9801, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(SampleDecryption, SAMPLEDECRYPTION, sd_start_start, START, 0x9F9802, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(SampleDecryption, SAMPLEDECRYPTION, sd_start_reply, START_REPLY, 0x9F9803, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(SampleDecryption, SAMPLEDECRYPTION, sd_update, UPDATE, 0x9F9804, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(SampleDecryption, SAMPLEDECRYPTION, sd_update_reply, UPDATE_REPLY, 0x9F9805, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205

// ===================== CICAM Player =====================
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_verify_req, VERIFY_REQ, 0x9FA000, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_verify_reply, VERIFY_REPLY, 0x9FA001, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_capabilities_req, CAPABILITIES_REQ, 0x9FA002, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_capabilities_reply, CAPABILITIES_REPLY, 0x9FA003, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_start_req, START_REQ, 0x9FA004, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_start_reply, START_REPLY, 0x9FA005, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_play_req, PLAY_REQ, 0x9FA006, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_status_error, STATUS_ERROR, 0x9FA007, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_control_req, CONTROL_REQ, 0x9FA008, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_info_req, INFO_REQ, 0x9FA009, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_info_reply, INFO_REPLY, 0x9FA00A, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_stop, STOP, 0x9FA00B, SPEC_TS103205_AND_HIGHER, DIRECTION_HOST_TO_CAM) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_end, END, 0x9FA00C, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST) // TS 103 205
MK_APDU_TAG(CICAMPlayer, CICAMPLAYER, CICAM_player_asset_end, ASSET_END, 0x9FA00D, SPEC_TS103205_AND_HIGHER, DIRECTION_CAM_TO_HOST)  // TS 103 205

// ====================== Factory Support ======================
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_get_id, GET_ID, 0x9F4201, SPEC_PRIVATE, DIRECTION_HOST_TO_CAM)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_get_id_reply, GET_ID_REPLY, 0x9F4202, SPEC_PRIVATE, DIRECTION_CAM_TO_HOST)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_get_item, GET_ITEM, 0x9F4203, SPEC_PRIVATE, DIRECTION_HOST_TO_CAM)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_get_item_reply, GET_ITEM_REPLY, 0x9F4204, SPEC_PRIVATE, DIRECTION_CAM_TO_HOST)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_set_item, SET_ITEM, 0x9F4205, SPEC_PRIVATE, DIRECTION_HOST_TO_CAM)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_set_item_reply, SET_ITEM_REPLY, 0x9F4206, SPEC_PRIVATE, DIRECTION_CAM_TO_HOST)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_check_item, CHECK_ITEM, 0x9F4207, SPEC_PRIVATE, DIRECTION_HOST_TO_CAM)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_check_item_reply, CHECK_ITEM_REPLY, 0x9F4208, SPEC_PRIVATE, DIRECTION_CAM_TO_HOST)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_run_command, RUN_COMMAND, 0x9F4209, SPEC_PRIVATE, DIRECTION_HOST_TO_CAM)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_run_command_reply, RUN_COMMAND_REPLY, 0x9F420A, SPEC_PRIVATE, DIRECTION_CAM_TO_HOST)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_download, DOWNLOAD, 0x9F420B, SPEC_PRIVATE, DIRECTION_HOST_TO_CAM)  // private extension from Rabbit Labs
MK_APDU_TAG(FactorySupport, FACTORYSUPPORT, FactorySupport_download_reply, DOWNLOAD_REPLY, 0x9F420C, SPEC_PRIVATE, DIRECTION_CAM_TO_HOST)  // private extension from Rabbit Labs


// @@RBL_MACRO_CIPLUS_END
