
################################################################################
#
# Copyright (c) 2008-2009 MStar Semiconductor, Inc.
# All rights reserved.
#
# Unless otherwise stipulated in writing, any and all information contained
# herein regardless in any format shall remain the sole proprietary of
# MStar Semiconductor Inc. and be kept in strict confidence
# ("MStar Confidential Information") by the recipient.
# Any unauthorized act including without limitation unauthorized disclosure,
# copying, use, reproduction, sale, distribution, modification, disassembling,
# reverse engineering and compiling of the contents of MStar Confidential
# Information is unlawful and strictly prohibited. MStar hereby reserves the
# rights to any and all damages, losses, costs and expenses resulting therefrom.
#
#
# Makefile used for building application.
#
# The default target (all) builds application in three formats :
#   *.rec : Image in S-record format.
#   *.bin : Image in binary format.
#   *.elf : Image in ELF format.
#   *.map : Linker generated map file.
#   *.dis : Disassembly of image.
#   *.sym : Symbols.
#
# Other targets are :
#   clean :    Deletes all files generated by makefile.
#
#
################################################################################


# **********************************************
# Import configure file
# **********************************************
include $(PRJ_DIR)/ddi_configuration

DDI_MAIN_DEMO_DIR = $(PRJ_DIR)/../../../../../../DDI_Main/demo
include  $(DDI_MAIN_DEMO_DIR)/Makefile.demo

ifeq ($(DDI_DEMO_MM),enable)
CFG_CC_DEFS += -D'FLAG_ENABLE_MM'
DDI_MAIN_MMSDK_DIR = $(PRJ_DIR)/../../../../../../DDI_Main/mmsdk
include  $(DDI_MAIN_MMSDK_DIR)/Makefile.mmsdk
endif

DDI_MAIN_DIR = $(PRJ_DIR)/../../../../../../DDI_Main
DDI_MISC_DIR = $(PRJ_DIR)/../../../../../../DDI_Misc
include  $(DDI_MISC_DIR)/cus_mstar/project/mstar_demo/Makefile
include  $(DDI_MISC_DIR)/cus_mstar/project/mstar_demo/Makefile.feature
# **********************************************
# Project specific
# **********************************************
ifeq ($(TOOLCHAIN),mips-linux-gnu)
OS_BUILT    = ecos_k1c_74kf_net_fileio_posix_fat_ntfs_v3_net_cpuload_c++_mipslinuxgnu
else
ifeq ($(DDI_DEMO_NET_ECOS),enable)
OS_BUILT    = ecos_k1c_74kf_net_fileio_posix_jffs2_fat_ntfs_v3_net_cpuload_c++
else
OS_BUILT    = ecos_k1c_74kf_fileio_posix_fat_ntfs_jffs2_v3_cpuload_c++
endif
endif
CC_APPOPTS  =


# **********************************************
# Directories
# **********************************************
ROOT        = .
TRUNK       = ../../..
BSP_PRJ     = $(TRUNK)
CUS_TOP     = $(PRJ_DIR)/../../../..

DDI_DAPI_DIR= $(PRJ_DIR)/../../../../../../DDI_DAPI
TRUNK_DAPI  = $(DDI_DAPI_DIR)/cus_mstar

ifeq ($(DDI_DEMO_NAND_ECOS),enable)
UNFD_PATH = ../../../../../../UNFD
endif

# Audio library path
ifeq ($(DDI_DEMO_GST),enable)
AUDIO_LIB_DIR = $(BSP_DIR)/lib/audio/MS11_GST
CFG_CC_DEFS += -D'AUDIO_GST'
else ifeq ($(DDI_DEMO_AUDIO_SUPPORT_MS12),enable)
AUDIO_LIB_DIR = $(BSP_DIR)/lib/audio/MS12
else ifeq ($(DDI_DEMO_AUDIO_SUPPORT_1D),enable)
AUDIO_LIB_DIR = $(BSP_DIR)/lib/audio/MS10_1D
else ifeq ($(DDI_DEMO_HD),disable)
AUDIO_LIB_DIR = $(BSP_DIR)/lib/SD
else
AUDIO_LIB_DIR = $(BSP_DIR)/lib/audio/MS11
endif

ifeq ($(DDI_DEMO_HD),disable)
SD_LIB_DIR = $(BSP_DIR)/lib/SD
endif

# for QMAP
QMAP_SEL    = k1c_mstar

# NDS Verifier
SRCDIR     = \
            $(TRUNK)/cus_mstar/platform/driver/pad             \
            $(TRUNK)/cus_mstar/platform/driver/pq              \
            $(TRUNK)/cus_mstar/platform/driver/pq/hal/$(QMAP_SEL)  \
            $(TRUNK)/cus_mstar/api/xc                          \
            $(TRUNK)/cus_mstar/api/sc                          \
            $(TRUNK)/cus_mstar/api/gpio                        \
            $(TRUNK)/cus_mstar/api/dte                        \
            $(TRUNK)/cus_mstar/api/mm/mmsdk			\
            $(TRUNK)/cus_mstar/api/lan

#SRCDIR     += $(TRUNK)/cus_mstar/platform/driver/jffs2
SRCDIR     += $(DDI_MISC_SRCDIR)

# Font header and source files
ifeq ($(DDI_DEMO_ZUI),enable)
INCDIR_FONT =$(DDI_MAIN_DIR)/zui/resource/mvf/include
SRCDIR_FONT =$(DDI_MAIN_DIR)/zui/resource/mvf/source
endif

ifeq ($(DAPI_BSP),enable)
SRCDIR     += \
            $(TRUNK_DAPI)/dapi			\
            $(TRUNK_DAPI)/app/dapi_demo
endif

SRCDIR     += $(PRJ_DIR)

#include DDI_Main source files
SRCDIR     += $(DDI_MAIN_DEMO_SRCDIR)

#include DDI_MISC files
SRCDIR     += $(BSP_PRJ)/bsp/misc

# Add version info c files
SRCDIR     += \
            $(TRUNK)/cus_mstar/platform/driver  \
            $(DDI_MISC_DIR)			\
            $(DDI_MAIN_DIR)

INCDIR     = \
            $(PRJ_DIR)                                              \
            $(PRJ_DIR)/include                                      \
            $(PRJ_DIR)/include/chip                                 \
            $(TRUNK)/cus_mstar/platform/driver/pad             \
            $(TRUNK)/cus_mstar/platform/driver/pq/include      \
            $(TRUNK)/cus_mstar/platform/driver/pq/hal/$(QMAP_SEL)/include  \
            $(TRUNK)/cus_mstar/api/xc                          \
            $(TRUNK)/cus_mstar/api/sc                          \
            $(TRUNK)/cus_mstar/api/gpio                        \
            $(TRUNK)/cus_mstar/api/dte                        \
            $(TRUNK)/cus_mstar/api/mm/mmsdk			\
            $(TRUNK)/cus_mstar/api/lan                         \
            $(CUS_TOP)/cus_info/                               \

#INCDIR     += $(TRUNK)/cus_mstar/platform/driver/jffs2


#include DDI_Main include files
INCDIR     += $(DDI_MAIN_DEMO_INCDIR)

#include DDI_MISC files
INCDIR     += $(DDI_MISC_INCDIR)

ifeq ($(DAPI_BSP),enable)
INCDIR     += \
            $(TRUNK_DAPI)/dapi                          \
            $(TRUNK_DAPI)/app/dapi_demo
endif

INCDIR     +=  $(PRJ_DIR)/pm

ifeq ($(DDI_DEMO_MM), enable)
SRCDIR     += $(DDI_MAIN_MMSDK_SRCDIR)
INCDIR     += $(DDI_MAIN_MMSDK_INCDIR)

INCDIR     += \
            $(DDI_MISC_DIR)/cus_mstar/api/mwlibs_include/freetype/freetype2                    \
            $(DDI_MISC_DIR)/cus_mstar/api/mwlibs_include/freetype/freetype2/config            \
            $(DDI_MISC_DIR)/cus_mstar/api/mwlibs_include/iniparser            \
            $(TRUNK)/cus_mstar/api/mm/fuchsia \
            $(TRUNK)/cus_mstar/api/mm/fuchsia/mm \
            $(TRUNK)/cus_mstar/api/mm/fuchsia/subtitle\
            $(TRUNK)/cus_mstar/api/mm/mmsdk/interface

endif

ifeq ($(DDI_DEMO_PVR),enable)
INCDIR     += $(TRUNK)/cus_mstar/api/pvr
ifeq ($(DDI_DEMO_PVR_V4), enable)
SRCDIR      += $(DDI_MAIN_PVRPL_SRCDIR)
INCDIR      += $(DDI_MAIN_PVRPL_INCDIR)
endif
endif

ifeq ($(DDI_DEMO_PVR),enable)
ifeq ($(DDI_DEMO_PVR_V4),enable)
DDI_MAIN_PVRPL_DIR = $(PRJ_DIR)/../../../../../../DDI_Main/pvrpl
include  $(DDI_MAIN_PVRPL_DIR)/Makefile.pvrpl
endif
endif

#ZUI files
ifeq ($(DDI_DEMO_ZUI),enable)
DDI_MAIN_ZUI_DIR = $(DDI_MAIN_DIR)/zui
SRCDIR      +=                                                                      \
             $(DDI_MAIN_ZUI_DIR)                                                    \
             $(DDI_MAIN_ZUI_DIR)/widgets                                            \
             $(DDI_MAIN_ZUI_DIR)/pageview                                           \
             $(DDI_MAIN_ZUI_DIR)/resource/res_ui_honeycomb_full/                    \
             $(DDI_MAIN_ZUI_DIR)/resource/res_ui_honeycomb_full/Osdcomposer/Osdbin
INCDIR      +=                                                                      \
             $(DDI_MAIN_ZUI_DIR)                                                    \
             $(DDI_MAIN_ZUI_DIR)/include                                            \
             $(DDI_MAIN_ZUI_DIR)/pageview/include                                   \
             $(DDI_MAIN_ZUI_DIR)/widgets/include                                    \
             $(DDI_MAIN_ZUI_DIR)/resource/res_ui_honeycomb_full/                    \
             $(DDI_MAIN_ZUI_DIR)/resource/res_ui_honeycomb_full/Include             \
             $(DDI_MAIN_ZUI_DIR)/resource/res_ui_honeycomb_full/Osdcomposer/Include \
             $(DDI_MAIN_ZUI_DIR)/resource/res_ui_honeycomb_full/Osdcomposer/Osdbin
endif

ifeq ($(DDI_DEMO_NAND_ECOS),enable)
SRCDIR     +=$(UNFD_PATH)/src/api
SRCDIR     +=$(UNFD_PATH)/src/common
SRCDIR     +=$(UNFD_PATH)/src/config
INCDIR     +=$(UNFD_PATH)/inc/api
INCDIR     +=$(UNFD_PATH)/src/api
INCDIR     +=$(UNFD_PATH)/inc/common
INCDIR     +=$(UNFD_PATH)/inc/config
SRCDIR     +=$(UNFD_PATH)/ftl/src
INCDIR     +=$(UNFD_PATH)/ftl/inc
endif

ifeq ($(CFG_CA),IRD)
SRCDIR     +=$(TRUNK)/verify/nds/ca_ird
INCDIR     +=$(TRUNK)/verify/nds/ca_ird
endif

ifeq ($(CFG_FE_AUTO_TEST), enable)
SRCDIR     += \
            $(DDI_MISC_CUS_DIR)/platform/driver/demod/autotest
INCDIR     += \
            $(DDI_MISC_CUS_DIR)/platform/driver/demod/autotest
endif

ifeq ($(CFG_BOARD),BD_MST290C_D01A_S)
SRCDIR     = \
            $(TRUNK)/cus_mstar/platform/driver/pccard       \
            $(TRUNK)/cus_mstar/platform/driver       \
            $(TRUNK)/cus_mstar/api/sc/
SRCDIR     += $(PRJ_DIR)
SRCDIR     += $(PRJ_DIR)/dummy_source_290C_S

SRCDIR     += $(DDI_MAIN_DEMO_SRCDIR)
SRCDIR     += $(DDI_MAIN_DIR)
SRCDIR     += $(DDI_MISC_DIR)
INCDIR     += $(TRUNK)/cus_mstar/platform/driver/pccard
CFG_CC_DEFS    += -D'PC_CARD'
endif

BINDIR      = bin
BIN_PATH    = $(ROOT)/$(BINDIR)
OBJDIR      = obj
OBJ_PATH    = $(ROOT)/$(OBJDIR)
ifeq ($(DDI_DEMO_ZUI),enable)
OBJ_FONTPATH = $(DDI_MAIN_ZUI_DIR)/resource/mvf/$(OBJDIR)
endif
# Search source file path
VPATH       = $(SRCDIR)                                       \
              $(DDI_MISC_CUS_DIR)/platform/driver/scart
ifeq ($(DDI_DEMO_ZUI),enable)
VPATH +=      $(DDI_MAIN_ZUI_DIR)/resource/mvf/include        \
              $(DDI_MAIN_ZUI_DIR)/resource/mvf/source
endif

# **********************************************
# Image file names
# **********************************************
IMAGE_BIN   = $(BIN_PATH)/$(IMAGENAME).bin
IMAGE_REC   = $(BIN_PATH)/$(IMAGENAME).rec
IMAGE_ELF   = $(BIN_PATH)/$(IMAGENAME).elf
IMAGE_MAP   = $(BIN_PATH)/$(IMAGENAME).map
IMAGE_DIS   = $(BIN_PATH)/$(IMAGENAME).dis
IMAGE_SIZ   = $(BIN_PATH)/$(IMAGENAME).siz
IMAGE_SYM   = $(BIN_PATH)/$(IMAGENAME).sym


# **********************************************
# Files to be compiled
# **********************************************
INC_C_LIB   = $(foreach dir, $(INCDIR_LIB),   $(wildcard $(dir)/*.h))
INC_C       = $(foreach dir, $(INCDIR),       $(wildcard $(dir)/*.h))
ifeq ($(DDI_DEMO_ZUI),enable)
INC_C_FONT  = $(foreach dir, $(INCDIR_FONT),  $(wildcard $(dir)/*.h))
endif
INC         = $(INC_C_LIB) $(INC_C)

#to be fixed, by teddy.chen
ifeq ('',$(findstring 'MST124', $(CFG_BOARD)))
SRC_C      += $(DDI_MISC_CUS_DIR)/platform/driver/scart/drvScart_STV6419.c
else
SRC_C      += $(DDI_MISC_CUS_DIR)/platform/driver/scart/drvScart_BD_MST.c
endif

SRC_C      += $(foreach dir, $(SRCDIR),       $(wildcard $(dir)/*.c))
ifeq ($(DDI_DEMO_ZUI),enable)
SRC_C_FONT += $(foreach dir, $(SRCDIR_FONT),  $(wildcard $(dir)/*.c))
endif
SRC         = $(SRC_C)

OBJ_C_0     = $(notdir $(patsubst %.c, %.o,   $(SRC_C)))
ifeq ($(DDI_DEMO_ZUI),enable)
OBJ_C_FONT0 = $(notdir $(patsubst %.c, %.o,   $(SRC_C_FONT)))
endif
OBJ_C       = $(foreach file, $(OBJ_C_0),     $(OBJ_PATH)/$(file))
ifeq ($(DDI_DEMO_ZUI),enable)
OBJ_C_FONT  = $(foreach file, $(OBJ_C_FONT0), $(OBJ_FONTPATH)/$(file))
endif
OBJ         = $(OBJ_C)


# **********************************************
# Libraries
# **********************************************

# Standard Libraries Path
BSP_DIR     = $(BSP_PRJ)/bsp

# Middleware Libraries Path


# Libraries
#BSP_LIBS    = $(BSP_DIR)/lib/libdrvNDS.a # for testing TODO: fix it
BSP_LIBS   += $(wildcard $(BSP_DIR)/lib/libapi*.a)	# api lib
BSP_LIBS   += $(wildcard $(BSP_DIR)/lib/libdrv*.a)	# drv lib
BSP_LIBS   += $(BSP_DIR)/lib/lib$(OS_TYPE).a		# sys lib
BSP_LIBS   += $(BSP_DIR)/lib/libMsFS.a                  # MsFs lib
ifeq ($(DDI_DEMO_DTE), enable)
BSP_LIBS   += $(TRUNK)/cus_mstar/api/dte/libmsAPI_DTE.a # DTE lib
endif
BSP_LIBS    += $(wildcard $(TRUNK)/cus_mstar/api/xc/*.a)	#Scaler/VE lib

#filter out libapiAUDIO*.a
BSP_LIBS      := $(filter-out $(wildcard $(BSP_DIR)/lib/libapiAUDIO*.a), $(BSP_LIBS))
#add audio lib
BSP_LIBS += $(AUDIO_LIB_DIR)/libapiAUDIO.a

#for SD version, vdec/jpeg lib is different from full version.
#full version uses VDEC FW3.2
#SD version uses VDEC FW1.0
ifeq ($(DDI_DEMO_HD),disable)
#vdec hdmi SD version
BSP_LIBS      := $(filter-out $(BSP_DIR)/lib/libapiVDEC.a $(BSP_DIR)/lib/libapiJPEG.a, $(BSP_LIBS))
BSP_LIBS      := $(filter-out $(BSP_DIR)/lib/libapiHDMITX.a , $(BSP_LIBS))
BSP_LIBS +=  $(SD_LIB_DIR)/libapiVDEC.a
BSP_LIBS +=  $(SD_LIB_DIR)/libapiJPEG.a
BSP_LIBS +=  $(SD_LIB_DIR)/libapiHDMITX.a
endif



ifeq ($(DAPI_BSP), enable)
ifeq ($(DAPI_DELAY_TASK_WRAP_BSP), enable)
BSP_LIBS += -Wl,--wrap,MsOS_DelayTask
endif
ifeq ($(DAPI_MEM_FENCE_BSP), enable)
BSP_LIBS += -Wl,--wrap,MsOS_AllocateMemory,--wrap,MsOS_FreeMemory
endif
endif

ifeq ($(DDI_DEMO_MM),enable)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/mm/*.a)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/mm/vdplayer/*.a)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/mm/fuchsia/*.a)
BSP_LIBS   += $(wildcard $(DDI_MISC_DIR)/cus_mstar/api/mm/freetype/*.a)
BSP_LIBS   += $(wildcard $(DDI_MISC_DIR)/cus_mstar/api/mm/iniparser/*.a)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/mm/mmsdk/*.a)

CPP_LIBS   += $(CFG_STDLIB_DIR)/libstdc++.a $(CFG_STDLIB_DIR)/libsupc++.a
endif


ifeq ($(DDI_DEMO_NAND_ECOS),enable)
BSP_LIBS   += $(wildcard $(UNFD_PATH)/ftl/src/core/$(TOOLCHAIN)*.a)
endif

ifeq ($(DDI_DEMO_PVR),enable)
ifeq ($(DDI_DEMO_PVR_V4),enable)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/pvr/*.a)      # pvr lib
endif
CPP_LIBS   += $(CFG_STDLIB_DIR)/libstdc++.a $(CFG_STDLIB_DIR)/libsupc++.a
endif

#ZUI Framwork will use these libs
ifeq ($(DDI_DEMO_ZUI),enable)
DDI_MAIN_ZUI_DIR = $(DDI_MAIN_DIR)/zui
MW_LIBS   += $(DDI_MAIN_ZUI_DIR)/lib/$(TOOLCHAIN)/$(TOOLCHAIN_VERSION)/libmwZUI.a
MW_LIBS   += $(DDI_MAIN_ZUI_DIR)/lib/$(TOOLCHAIN)/$(TOOLCHAIN_VERSION)/libmwOSD.a
MW_LIBS   += $(DDI_MAIN_ZUI_DIR)/lib/$(TOOLCHAIN)/$(TOOLCHAIN_VERSION)/libmwMVF.a
MW_LIBS   += $(DDI_MAIN_ZUI_DIR)/lib/$(TOOLCHAIN)/$(TOOLCHAIN_VERSION)/libmwFONTUTL.a
MW_LIBS   += $(DDI_MAIN_ZUI_DIR)/lib/$(TOOLCHAIN)/$(TOOLCHAIN_VERSION)/libmwBMPFONT.a
ifeq ($(OS_TYPE),ecos)
FONT_LIB = $(DDI_MAIN_ZUI_DIR)/resource/mvf/font-ecos.lib
else
FONT_LIB = $(DDI_MAIN_ZUI_DIR)/resource/mvf/font-linux.lib
endif
endif

# Middlware Libraries
ifeq ($(CFG_CA),NDS)
ifeq ($(CFG_NDS_LIB),NDS)
MW_LIBS     = $(TRUNK)/verify/nds/tstver_mstar_dv.a
endif
endif
ifeq ($(CFG_CA),TF)
MW_LIBS     = $(TRUNK)/verify/nds/MSD5015-20080429D.lib
endif
ifeq ($(CFG_CA),IRD)
MW_LIBS     = $(TRUNK)/verify/nds/s3_dvb_client_3.3.9.lib
endif
ifeq ($(CFG_CA),NGA)
MW_LIBS     =
endif

ifeq ($(CFG_BOARD),BD_MST290C_D01A_S)
BSP_LIBS = $(BSP_DIR)/lib/libecos.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvCPU.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvGPIO.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvSC.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvPCMCIA.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvHWI2C.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvIPAUTH.a
BSP_LIBS += $(BSP_DIR)/lib/libapiDMX.a
BSP_LIBS += $(BSP_DIR)/lib/libMsFS.a
BSP_LIBS += $(BSP_DIR)/lib/libdrvDSCMB2.a
BSP_LIBS += $(wildcard $(TRUNK)/cus_mstar/platform/driver/pccard/*.a)
endif


# **********************************************
# Compiler and linker options
# **********************************************
ifeq ($(OS_TYPE),ecos)
OS_INC_DIR  = $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/include
OS_INC_DIR  += $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/include/linux

OS_LIB_DIR  = $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/lib
OS_LIBS = $(wildcard $(OS_LIB_DIR)/*.a)
OS_EX_BUILD_OBJ = $(wildcard $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/libntfs/*.o)
#OS_EX_BUILD_OBJ += $(wildcard $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/libjffs2/*.o)
endif
ifeq ($(OS_TYPE),ucos)
OS_INC_DIR  = $(TRUNK)/$(OS_TYPE)/include
OS_LIB_DIR  = $(TRUNK)/$(OS_TYPE)/lib
endif

ALL_INC_DIR = $(OS_INC_DIR) $(INCDIR) $(BSP_DIR)/include $(BSP_DIR)/lib/fw
ifeq ($(DDI_DEMO_ZUI),enable)
ALL_INC_DIR += $(INCDIR_FONT)
endif

CC_INCS     = $(foreach dir, $(ALL_INC_DIR), -I$(dir))

CC_DEFS     = $(CFG_CC_DEFS)

# GCC options:
CC_OPTS     = $(CFG_CC_OPTS) -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef
CC_OPTS    += -fno-strict-aliasing -fno-optimize-sibling-calls -fno-exceptions -fno-builtin
CC_OPTS    += -ffunction-sections
CC_OPTS    += -fdata-sections
CC_OPTS    += -c -G0 -Werror

ifeq ($(BLT_TYPE),debug)
CC_OPTS    += -O0
CC_DEFS    += -D'MS_DEBUG'
else
CC_OPTS    += -Os
CC_DEFS    += -D'MS_OPTIMIZE'
endif

# AS options:
AS_OPTS     = -mips32 -$(ENDIAN) -G0 -O2 -gdwarf2

# LD options:
ifeq ($(TOOLCHAIN),mips-sde-elf)
LD_SCRIPT   = ecos_mipssde.ld
endif
ifeq ($(TOOLCHAIN),mipsisa32-elf)
LD_SCRIPT   = ecos_mipsisa32.ld
endif
ifeq ($(TOOLCHAIN),mips-linux-gnu)
LD_SCRIPT   = ecos_mipslinuxgnu.ld
endif
LD_LIBS     = -L$(OS_LIB_DIR) -L$(CFG_STDLIB_DIR) -L$(BSP_DIR)/lib -T$(LD_SCRIPT) # libtarget.a, libgcc.a, UART+EMAC
LD_OPTS     = $(CFG_LD_OPTS) -$(ENDIAN) --gc-sections -static -Map $(IMAGE_MAP)
#LD_OPTS     = $(CFG_LD_OPTS) -$(ENDIAN) --gc-sections -static -Map $(IMAGE_MAP)

# Force put VERSION symbols into output file
ifneq ("$(wildcard $(DDI_MAIN_DIR)/*version_info.c)","")
LD_OPTS += -u DDI_MAIN_VERSION
endif
ifneq ("$(wildcard $(DDI_MISC_DIR)/*version_info.c)","")
LD_OPTS += -u DDI_MISC_VERSION
endif
ifneq ("$(wildcard $(TRUNK)/cus_mstar/platform/driver/*version_info.c)","")
LD_OPTS += -u BSP_VERSION
endif

LIBGCC = $(CFG_STDLIB_DIR)/libgcc.a

# **********************************************
# Rules
# **********************************************
.PHONY : all clean library package depend $(IMAGE_ELF)

# Project Build
all : setup makeImg

makeElf : $(IMAGE_ELF)

# makeImg : $(IMAGE_ELF) $(IMAGE_BIN)
makeImg : $(IMAGE_ELF) $(IMAGE_BIN)

# Note: It's slow to produce .dis file w/o -gdwarf-2 set or original OS source code
makeImgInfo : $(IMAGE_ELF)
	$(OBJDUMP) -S $(IMAGE_ELF) > $(IMAGE_DIS);
	$(SIZE) $(IMAGE_ELF) > $(IMAGE_SIZ);
	$(NM) -a -S $(IMAGE_ELF) > $(IMAGE_SYM);

# Utility makefile for standalone library
makeFont : fontsetup fontlib

# Project Image Build

# Project Image Build
$(IMAGE_BIN) : $(IMAGE_ELF)
	$(OBJCOPY) -O binary $(IMAGE_ELF) $(IMAGE_BIN);

ifeq ($(DDI_DEMO_PVR),enable)
$(IMAGE_ELF) : $(OBJ_C)
	@echo '  [LD] $@'
	@$(LD) -G0 $(LD_OPTS) -o $(IMAGE_ELF) $(OBJ_C) $(LD_LIBS) --start-group $(CPP_LIBS) $(BSP_LIBS) $(OS_LIBS) $(OS_EX_BUILD_OBJ) $(LIBGCC) --end-group $(MW_LIBS) $(FONT_LIB);
else ifeq ($(DDI_DEMO_MM),enable)
$(IMAGE_ELF) : $(OBJ_C)
	@echo '  [LD] $@'
	@$(LD) -G0 $(LD_OPTS) -o $(IMAGE_ELF) $(OBJ_C) $(LD_LIBS) --start-group $(CPP_LIBS) $(BSP_LIBS) $(OS_LIBS) $(OS_EX_BUILD_OBJ) $(LIBGCC) --end-group $(MW_LIBS) $(FONT_LIB);
else
$(IMAGE_ELF) : $(OBJ_C)
	@echo '  [LD] $@'
	@$(LD) $(LD_OPTS) -o $(IMAGE_ELF) $(OBJ_C) $(LD_LIBS) --start-group $(CPP_LIBS) $(BSP_LIBS) $(OS_LIBS) $(OS_EX_BUILD_OBJ) $(LIBGCC) --end-group $(MW_LIBS) $(FONT_LIB);
endif

# Project Font Build
fontsetup :
	-@mkdir -p $(OBJ_FONTPATH) 2> /dev/null;
	@echo "Make $(CHIP) $(PROJNAME) font library...";

fontlib : $(OBJ_C_FONT)

$(OBJ_C_FONT) : $(OBJ_FONTPATH)/%.o : %.c
	@echo "  [FONT_CC] $@"
	@$(CC) $(CC_OPTS) -o $@ $<;
	@echo "  [FONT_AR] $@"
	@$(AR) -cr $(FONT_LIB) $@;

# Project Source Build
$(OBJ_C) : $(OBJ_PATH)/%.o : %.c
	@echo '  [CC] $@'
	@$(CC) $(CC_OPTS) $(CC_DEFS) $(CC_INCS) -o $@ $<;

# Project Setup
setup :
	-@mkdir -p $(OBJDIR) 2> /dev/null;
	-@mkdir -p $(BINDIR) 2> /dev/null;
	@echo "Make $(CHIP) $(PROJNAME) project...";
ifeq ($(TOOLCHAIN),mipsisa32-elf)
	@k=0; for i in $(BSP_LIBS); do j=`$(AR) t $$i | grep -ic 'hardfloat'`; if(($$j==0)); then k=1;echo $$i" use soft-float! Please use hard-float instead."; fi ; done ; if((k>0)); then false ; fi
endif

# Project Clean
clean :
	@echo "Clean $(CHIP) $(PROJNAME) project..."
	@rm -f -r $(OBJ_PATH)
	@rm -f -r $(BIN_PATH)
	@rm -f -r DDI_MAIN_K1C_ECOS.bdf
	@echo "Clean $(CHIP) $(PROJNAME) ..."

# Project Dependence
depend :
	$(CC) $(CC_OPTS) $(CC_DEFS) $(CC_INCS) -M $(SRC) > $(BIN_PATH)/depend.mk


# Project Dependence Full version
dep :
	$(CC) $(CC_OPTS) $(CC_DEFS) $(CC_INCS) -M $(SRC) > $(BIN_PATH)/depend.mk
	cat $(BIN_PATH)/depend.mk | sed -e 's/\(.*\)\.o/\$$\(OBJ_PATH\)\/\1.o/g' > depend.mk


-include depend.mk
