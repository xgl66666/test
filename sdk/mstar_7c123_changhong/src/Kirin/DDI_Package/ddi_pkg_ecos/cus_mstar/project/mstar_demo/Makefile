
################################################################################
#
# Copyright (c) 2008-2009 MStar Semiconductor, Inc.
# All rights reserved.
#
# Unless otherwise stipulated in writing, any and all information contained
# herein regardless in any format shall remain the sole proprietary of
# MStar Semiconductor Inc. and be kept in strict confidence
# ("MStar Confidential Information") by the recipient.
# Any unauthorized act including without limitation unauthorized disclosure,
# copying, use, reproduction, sale, distribution, modification, disassembling,
# reverse engineering and compiling of the contents of MStar Confidential
# Information is unlawful and strictly prohibited. MStar hereby reserves the
# rights to any and all damages, losses, costs and expenses resulting therefrom.
#
#
# Makefile used for building application.
#
# The default target (all) builds application in three formats :
#   *.rec : Image in S-record format.
#   *.bin : Image in binary format.
#   *.elf : Image in ELF format.
#   *.map : Linker generated map file.
#   *.dis : Disassembly of image.
#   *.sym : Symbols.
#
# Other targets are :
#   clean :    Deletes all files generated by makefile.
#
#
################################################################################
SHELL=/bin/bash
export

# **********************************************
# Import configure file
# **********************************************
PRJ_DIR     = $(CURDIR)
-include $(PRJ_DIR)/ddi_configuration

ifeq ($(MI_BSP),disable)
TARGET_MK=ddi_target.mk
else
TARGET_MK=mi_target.mk
endif

DDI_MAIN_DIR = $(PRJ_DIR)/../../../../../../DDI_Main
DDI_MISC_DIR = $(PRJ_DIR)/../../../../../../DDI_Misc
DDI_BSP_VER_DIR = $(PRJ_DIR)/../../platform/driver

# **********************************************
# Directories
# **********************************************
BSP_PRJ     = $(PRJ_DIR)/../../../project/$(CHIP)_$(OS_TYPE)
TRUNK_MISC  = $(PRJ_DIR)/../../../../../../DDI_Misc/cus_mstar
IMAGE_BIN   = bin/$(IMAGENAME).bin
IMAGE_ZIP   = bin/$(IMAGENAME).zip
# **********************************************
# Rules
# **********************************************
.PHONY : all library package image

# Project Build
all : check_build_toolver check_lib_gccver version makeBsp mwlib makeImg print_FE_list
	@cd ../../../bsp/ecos/partition/;\
	./boot.sh;\
	cd -;\
	cd ../../../boot/sboot/;\
	printf "CFG_BOARD=%s \n" $(CFG_BOARD) >> cfg_board.inc; \
	printf "CFG_CHIP_SELECTION=%s \n" $(CFG_CHIP_SELECTION) >> cfg_board.inc; \
	./build_$(CHIP)_ddi.sh;\
	cd -;
	@echo -e " ***************            Update files to usb_update.                ****************"
	@cp -f ../../../bsp/ecos/tftp_root/miu_setting.txt ../../../bsp/ecos/tftp_root/usb_update/Target/script/miu_setting.txt
	@cp -f ../../../bsp/ecos/tftp_root/parameters.txt ../../../bsp/ecos/tftp_root/usb_update/Target/script/parameters.txt
	@cp -f ../../../bsp/ecos/tftp_root/set_config ../../../bsp/ecos/tftp_root/usb_update/Target/script/set_config
	@rm -rf ../../../bsp/ecos/tftp_root/usb_update/Target/image/
	@mkdir ../../../bsp/ecos/tftp_root/usb_update/Target/image/
	@cp -f ../../../bsp/ecos/tftp_root/$(CHIP)_$(OS_TYPE).zip ../../../bsp/ecos/tftp_root/usb_update/Target/image/
	@cp -R ../../../bsp/ecos/tftp_root ./bin/
	@echo -e " ***************            Update Done.                               ****************"

makeBsp : library package

makeImg : image

# Project tool chain version checking
ALL_LIB_SHARED  = $(shell find $(PRJ_DIR)/../../../boot -name "*.so")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../boot -name "*.a")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../bsp -name "*.so")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../bsp -name "*.a")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../cus_mstar -name "*.so")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../cus_mstar -name "*.a")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../ecos -name "*.so")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../ecos -name "*.a")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../tools/mipsisa32-elf -name "*.so")
ALL_LIB_SHARED  += $(shell find $(PRJ_DIR)/../../../tools/mipsisa32-elf -name "*.a")

check_lib_gccver:
	@echo         "### Start checking libs tool chain version $(TOOLCHAIN) $(TOOLCHAIN_VERSION) ###"
	@if [ '$(shell grep -l "(GNU) 4.3.3" $(ALL_LIB_SHARED))' ];\
		then echo "[Warning] Below libs's tool chain version is not match to $(TOOLCHAIN) $(TOOLCHAIN_VERSION) !";\
			 grep -l "(GNU) 4.3.3" $(ALL_LIB_SHARED);\
			 echo "### End checking libs tool chain version   ###";\
		else echo "### Pass checking libs tool chain version  ###";\
	fi

log_gccver:
	@$(CC) -v > .GCCver.log 2>&1

check_build_toolver: log_gccver
	@echo         "### Start checking workspace tool chain version against $(TOOLCHAIN) $(TOOLCHAIN_VERSION) ###"
	@if [ '$(shell grep "$(TOOLCHAIN_VERSION)" .GCCver.log)' ] ;\
		then echo "### Pass checking workspace tool chain version ###" ;\
			 rm .GCCver.log ;\
		else echo "[Error] Tool chain version should be $(TOOLCHAIN) $(TOOLCHAIN_VERSION). please check it!!" ;\
			 echo "Your workspace tool chain version:" ;\
			 $(CC) -dumpversion ;\
			 echo "### End checking workspace tool chain version  ###" ;\
			 rm .GCCver.log ;exit 99;\
	fi


# Project Image Build
image :
	@$(MAKE) -f $(TARGET_MK) $(filter-out,clean,$(MAKECMDGOALS)) 2>&1 | tee make.log; exit $${PIPESTATUS[0]}

# Project Library Package
package :
	@if [ -d $(BSP_PRJ) ];\
		then $(MAKE) -s -C $(BSP_PRJ) bsp;\
	fi

# Project Library Build
library :
	@if [ -d $(BSP_PRJ) ];\
		then $(MAKE) -s -C $(BSP_PRJ);\
	fi

version:
	@echo "Generating verion information..."
	@pushd . > /dev/null;\
	cd $(DDI_MAIN_DIR);\
	./gen_main_ver.sh $(DDI_MAIN_DIR);\
	cd $(DDI_MISC_DIR);\
	./gen_misc_ver.sh;\
	cd $(DDI_BSP_VER_DIR);\
	./gen_bsp_ver.sh;\
	popd > /dev/null;

# Project Clean
clean :
	@$(MAKE) -s -f $(TARGET_MK) clean
	@if [ -d ../../../project/$(CHIP)_$(OS_TYPE) ];\
		then $(MAKE) -s -C $(BSP_PRJ) clean;\
	fi

mwlib:
ifeq ($(RELEASE_MW_LIB), enable)
	@echo -e " ************************************************************************"
	@echo -e " *****************         Release MSTAR_MW libs          **********************"
	@echo -e " ************************************************************************"
	@echo "$(PRJ_DIR)"
	@$(MAKE) -C $(TRUNK_MISC)/ all DDI_MAIN=enable

ifneq (,$(filter enable, $(DDI_DEMO_OPENGLES2) $(DDI_DEMO_DRM) $(DDI_DEMO_HBBTV) $(DDI_DEMO_APM) $(DDI_DEMO_QT) $(DDI_DEMO_DFB)))
	@$(MAKE) -C $(DDI_OTT_DIR)/cus_mstar/ all DDI_MAIN=enable
endif

-include depend.mk
else
	@echo -e " ************************************************************************"
	@echo -e " *****************                                 **********************"
	@echo -e " *****************    RELEASE_MW_LIB is disable    **********************"
	@echo -e " *****************      no release MSTAR_MW libs         **********************"
	@echo -e " *****************                                 **********************"
	@echo -e " ************************************************************************"
endif


setup :
	@$(MAKE) -f $(TARGET_MK) setup

# print frontend demod/tuner detection list
print_FE_list :
ifeq ($(CFG_FE_LOCAL_DETECTION_LIST),disable)
	@echo -e ""
	@echo -e "************************************************************************"
	@echo -e "****************** FE Detection List Setting ***************************"
	@echo -e "************************************************************************"
	@echo -e "<External Demod Detection List>"
	@grep -o "DEMOD_...._SCAN_DEVICE.*" $(TRUNK_MISC)/project/mstar_demo/Frontend_Detect_List.h | grep -v "DEMOD_NULL"
	@echo -e ""
	@echo -e "<Tuner Detection List>"
	@grep -o "TUNER_...._SCAN_DEVICE.*" $(TRUNK_MISC)/project/mstar_demo/Frontend_Detect_List.h | grep -v "TUNER_NULL"
	@echo -e ""
	@echo -e "Note: Above list can be adjusted in //DDI_Misc/cus_mstar/project/mstar_demo/Frontend_Detect_List.h"
	@echo -e "A README in this file can be referenced to get further information"
	@echo -e "************************************************************************"
	@echo -e "****************** END FE Detection List Setting ***********************"
	@echo -e "************************************************************************"
	@echo -e ""
else
	@echo -e ""
	@echo -e "************************************************************************"
	@echo -e "****************** FE Detection List Setting ***************************"
	@echo -e "************************************************************************"
	@echo -e "<External Demod Detection List>"
	@grep -o "DEMOD_...._SCAN_DEVICE.*" $(PRJ_DIR)/Local_Frontend_Detect_List.h | grep -v "DEMOD_NULL"
	@echo -e ""
	@echo -e "<Tuner Detection List>"
	@grep -o "TUNER_...._SCAN_DEVICE.*" $(PRJ_DIR)/Local_Frontend_Detect_List.h | grep -v "TUNER_NULL"
	@echo -e ""
	@echo -e "Note: Above list can be adjusted in Local_Frontend_Detect_List.h"
	@echo -e "A README in this file can be referenced to get further information"
	@echo -e "************************************************************************"
	@echo -e "****************** END FE Detection List Setting ***********************"
	@echo -e "************************************************************************"
	@echo -e ""
endif
