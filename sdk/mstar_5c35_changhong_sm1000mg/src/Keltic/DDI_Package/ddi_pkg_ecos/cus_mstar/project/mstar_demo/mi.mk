
################################################################################
#
# Copyright (c) 2008-2009 MStar Semiconductor, Inc.
# All rights reserved.
#
# Unless otherwise stipulated in writing, any and all information contained
# herein regardless in any format shall remain the sole proprietary of
# MStar Semiconductor Inc. and be kept in strict confidence
# ("MStar Confidential Information") by the recipient.
# Any unauthorized act including without limitation unauthorized disclosure,
# copying, use, reproduction, sale, distribution, modification, disassembling,
# reverse engineering and compiling of the contents of MStar Confidential
# Information is unlawful and strictly prohibited. MStar hereby reserves the
# rights to any and all damages, losses, costs and expenses resulting therefrom.
#
#
# Makefile used for building application.
#
# The default target (all) builds application in three formats :
#   *.rec : Image in S-record format.
#   *.bin : Image in binary format.
#   *.elf : Image in ELF format.
#   *.map : Linker generated map file.
#   *.dis : Disassembly of image.
#   *.sym : Symbols.
#
# Other targets are :
#   clean :    Deletes all files generated by makefile.
#
#
################################################################################

# **********************************************
# Import configure file
# **********************************************
ifeq ($(PARA),1)
CFG_CC_OPTS =
CFG_LD_OPTS =
CFG_AS_OPTS =
endif

-include $(PRJ_DIR)/config
-include $(PRJ_DIR)/configure_mi
-include $(PRJ_DIR)/cus_config/configure_mstar$(MMAP)

# **********************************************
# Project specific
# **********************************************

#OS_BUILT    = ecos_keltic_34kf_fileio_posix_fat_c++_mipsisa32
ifeq ($(CFG_ECOS_VERSION),Normal)
OS_BUILT    = ecos_keltic_34kf_fileio_posix_fat_ntfs_c++_mipsisa32
else
OS_BUILT    = ecos_keltic_34kf_fileio_posix_fat_c++_mipsisa32
endif
CC_APPOPTS  =


# **********************************************
# Directories
# **********************************************
ROOT        = .
TRUNK       = ../../..
BSP_PRJ     = $(TRUNK)
CUS_TOP     = $(PRJ_DIR)/../../../..

#DDI MISC directory
DDI_MISC_DIR = $(PRJ_DIR)/../../../../../../DDI_Misc
include  $(DDI_MISC_DIR)/cus_mstar/project/mstar_demo/Makefile

#DDI MI directory
DDI_MI_DIR= $(PRJ_DIR)/../../../../../../../../DDI_MI_Branch/V1.0
TRUNK_MI  = $(DDI_MI_DIR)/cus_mstar

DDI_MI_LIB= $(DDI_MI_DIR)/cus_mstar/mi/bin/libmi.a             \
            $(DDI_MI_DIR)/cus_mstar/mi/bin/libmidemo.a

# for QMAP
QMAP_SEL    = keltic_mstar

# NDS Verifier
SRCDIR     = \
            $(TRUNK)/cus_mstar/platform/driver/pad             \
            $(TRUNK)/cus_mstar/platform/driver/pwsv            \
            $(TRUNK)/cus_mstar/platform/driver/pq              \
            $(TRUNK)/cus_mstar/platform/driver/pq/hal/$(QMAP_SEL)  \
            $(TRUNK)/cus_mstar/api/xc                          \
            $(TRUNK)/cus_mstar/api/sc                          \
            $(TRUNK)/cus_mstar/api/gpio                               \
            $(TRUNK)/cus_mstar/api/font

#include DDI_MISC files
SRCDIR     += $(DDI_MISC_SRCDIR)
SRCDIR     += $(TRUNK)/bsp/misc


INCDIR     = \
            $(PRJ_DIR)                                              \
            $(PRJ_DIR)/include                                      \
            $(PRJ_DIR)/include/chip                                 \
            $(TRUNK)/cus_mstar/platform/driver/pad             \
            $(TRUNK)/cus_mstar/platform/driver/pwsv            \
            $(TRUNK)/cus_mstar/platform/driver/pq/include      \
            $(TRUNK)/cus_mstar/platform/driver/pq/hal/$(QMAP_SEL)/include  \
            $(TRUNK)/cus_mstar/api/xc                          \
            $(TRUNK)/cus_mstar/api/sc                          \
            $(TRUNK)/cus_mstar/api/gpio                        \
            $(TRUNK)/cus_mstar/api/xml/expat-2.0.1             \
            $(TRUNK)/cus_mstar/app/demo                        \
            $(CUS_TOP)/cus_info/                               \

#include DDI_MISC files
INCDIR     += $(DDI_MISC_INCDIR)


ifeq ($(MM_BSP), enable)
INCDIR     += $(TRUNK)/cus_mstar/api/mm
endif
ifeq ($(PVR_BSP),enable)
INCDIR     += $(TRUNK)/cus_mstar/api/pvr
endif

ifeq ($(SUBTITLE_BSP),enable)
INCDIR     += \
           $(TRUNK)/cus_mstar/api/subtitle
endif

ifeq ($(TTX_BSP),enable)
INCDIR     += \
           $(TRUNK)/cus_mstar/api/ttx
endif

INCDIR     += $(TRUNK)/cus_mstar/api/font

ifeq ($(CC_BSP), enable)
ifeq ($(ATSC_CC_BSP),enable)
INCDIR     += \
           $(TRUNK)/cus_mstar/api/atsc_cc
else
INCDIR     += \
           $(TRUNK)/cus_mstar/api/cc
endif
endif


ifeq ($(CFG_CA),IRD)
SRCDIR     +=$(TRUNK)/verify/nds/ca_ird
INCDIR     +=$(TRUNK)/verify/nds/ca_ird
endif

ifeq ($(MI_IMGDEC_FEATURE), enable)
INCDIR     += \
           $(TRUNK)/cus_mstar/api/image
endif

BINDIR      = bin
BIN_PATH    = $(ROOT)/$(BINDIR)
OBJDIR      = obj
OBJ_PATH    = $(ROOT)/$(OBJDIR)

# Search source file path
VPATH       = $(SRCDIR)                                       \
              $(DDI_MISC_DIR)/cus_mstar/platform/driver/scart        \


# **********************************************
# Image file names
# **********************************************
IMAGE_BIN   = $(BIN_PATH)/$(IMAGENAME).bin
IMAGE_REC   = $(BIN_PATH)/$(IMAGENAME).rec
IMAGE_ELF   = $(BIN_PATH)/$(IMAGENAME).elf
IMAGE_MAP   = $(BIN_PATH)/$(IMAGENAME).map
IMAGE_DIS   = $(BIN_PATH)/$(IMAGENAME).dis
IMAGE_SIZ   = $(BIN_PATH)/$(IMAGENAME).siz
IMAGE_SYM   = $(BIN_PATH)/$(IMAGENAME).sym


# **********************************************
# Files to be compiled
# **********************************************
INC_C_LIB   = $(foreach dir, $(INCDIR_LIB),   $(wildcard $(dir)/*.h))
INC_C       = $(foreach dir, $(INCDIR),       $(wildcard $(dir)/*.h))
INC         = $(INC_C_LIB) $(INC_C)

ifeq ('',$(findstring 'MST183', $(CFG_BOARD)))
SRC_C      += $(DDI_MISC_DIR)/cus_mstar/platform/driver/scart/drvScart_STV6419.c
else
SRC_C      += $(DDI_MISC_DIR)/cus_mstar/platform/driver/scart/drvScart_BD_MST.c
endif
SRC_C      += $(foreach dir, $(SRCDIR),       $(wildcard $(dir)/*.c))
SRC         = $(SRC_C)

OBJ_C_0     = $(notdir $(patsubst %.c, %.o,   $(SRC_C)))
OBJ_C       = $(foreach file, $(OBJ_C_0),     $(OBJ_PATH)/$(file))
OBJ         = $(OBJ_C)


# **********************************************
# Libraries
# **********************************************

# Standard Libraries Path
BSP_DIR     = $(BSP_PRJ)/bsp

# Middleware Libraries Path


# Libraries
BSP_LIBS   += $(wildcard $(BSP_DIR)/lib/libapi*.a)	# api lib
BSP_LIBS   += $(wildcard $(BSP_DIR)/remove/libapi*.a)      # api lib
BSP_LIBS   += $(wildcard $(BSP_DIR)/lib/libdrv*.a)	# drv lib
BSP_LIBS   += $(BSP_DIR)/lib/lib$(OS_TYPE).a		# sys lib
BSP_LIBS   += $(BSP_DIR)/lib/libMsFS.a                  # MsFs lib
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/xc/*.a)	#Scaler/VE lib

ifeq ($(SUBTITLE_BSP), enable)
BSP_LIBS         += $(foreach dir, $(TRUNK)/cus_mstar/api/subtitle, $(wildcard $(dir)/*.a))
BSP_LIBS         += $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a
MW_LIBS          += $(CFG_STDLIB_DIR)/libstdc++.a $(CFG_STDLIB_DIR)/libsupc++.a
endif

ifeq ($(TTX_BSP), enable)
BSP_LIBS         += $(foreach dir, $(TRUNK)/cus_mstar/api/ttx, $(wildcard $(dir)/*.a))
endif

ifeq ($(CC_BSP), enable)
ifeq ($(ATSC_CC_BSP),enable)
BSP_LIBS         += $(foreach dir, $(TRUNK)/cus_mstar/api/atsc_cc, $(wildcard $(dir)/*.a))
else
BSP_LIBS         += $(foreach dir, $(TRUNK)/cus_mstar/api/cc, $(wildcard $(dir)/*.a))
endif
endif
ifeq ($(MI_IMGDEC_FEATURE), enable)
BSP_LIBS    += $(foreach dir, $(TRUNK)/cus_mstar/api/image, $(wildcard $(dir)/*.a))
endif

ifeq ($(MI_DELAY_TASK_WRAP_BSP), enable)
BSP_LIBS += -Wl,--wrap,MsOS_DelayTask
endif
ifeq ($(MI_MEM_FENCE_BSP), enable)
BSP_LIBS += -Wl,--wrap,MsOS_AllocateMemory,--wrap,MsOS_FreeMemory
endif

ifeq ($(MM_BSP),enable)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/mm/*.a)      # mm lib
MW_LIBS   += $(CFG_STDLIB_DIR)/libstdc++.a $(CFG_STDLIB_DIR)/libsupc++.a
endif
ifeq ($(PVR_BSP),enable)
BSP_LIBS   += $(wildcard $(TRUNK)/cus_mstar/api/pvr/*.a)      # pvr lib
MW_LIBS   += $(CFG_STDLIB_DIR)/libstdc++.a $(CFG_STDLIB_DIR)/libsupc++.a
endif

ifeq ($(CFG_AUDIO_LIB_TYPE),Audio_Normal)
NEW_AUDIO_LIB = $(BSP_DIR)/lib/libapiAUDIO_lite.a
NEW_AUDSP_LIB = $(BSP_DIR)/lib/libdrvAUDSP_lite.a
BSP_LIBS      := $(filter-out $(NEW_AUDIO_LIB) $(NEW_AUDSP_LIB), $(BSP_LIBS))
endif

ifeq ($(CFG_AUDIO_LIB_TYPE),Audio_Lite)
OLD_AUDIO_LIB = $(BSP_DIR)/lib/libapiAUDIO.a
OLD_AUDSP_LIB = $(BSP_DIR)/lib/libdrvAUDSP.a
NEW_AUDIO_LIB = $(BSP_DIR)/lib/libapiAUDIO_lite.a
NEW_AUDSP_LIB = $(BSP_DIR)/lib/libdrvAUDSP_lite.a
BSP_LIBS      := $(filter-out $(OLD_AUDIO_LIB) $(OLD_AUDSP_LIB), $(BSP_LIBS))
BSP_LIBS      += $(NEW_AUDIO_LIB) $(NEW_AUDSP_LIB)
endif

# Middlware Libraries
ifeq ($(CFG_CA),NDS)
ifeq ($(CFG_NDS_LIB),NDS)
MW_LIBS     = $(TRUNK)/verify/nds/tstver_mstar_dv.a
endif
endif
ifeq ($(CFG_CA),TF)
MW_LIBS     = $(TRUNK)/verify/nds/MSD5015-20080429D.lib
endif
ifeq ($(CFG_CA),IRD)
MW_LIBS     = $(TRUNK)/verify/nds/s3_dvb_client_3.3.9.lib
endif
ifeq ($(CFG_CA),NGA)
MW_LIBS     =
endif


# **********************************************
# Compiler and linker options
# **********************************************
ifeq ($(OS_TYPE),ecos)
OS_INC_DIR  = $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/include
OS_LIB_DIR  = $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/lib
OS_EX_BUILD_OBJ = $(wildcard $(TRUNK)/$(OS_TYPE)/$(OS_BUILT)/libntfs/*.o)
endif
ifeq ($(OS_TYPE),ucos)
OS_INC_DIR  = $(TRUNK)/$(OS_TYPE)/include
OS_LIB_DIR  = $(TRUNK)/$(OS_TYPE)/lib
endif

ALL_INC_DIR = $(OS_INC_DIR) $(INCDIR) $(BSP_DIR)/include $(BSP_DIR)/lib/fw

CC_INCS     = $(foreach dir, $(ALL_INC_DIR), -I$(dir))

CC_DEFS     = $(CFG_CC_DEFS)
# GCC options:
ifeq ($(PARA),0)
CC_OPTS     = $(CFG_CC_OPTS) -Wall -Wpointer-arith -Wstrict-prototypes -Winline -Wundef
CC_OPTS    += -fno-strict-aliasing -fno-optimize-sibling-calls -fno-exceptions -fno-builtin
#CC_OPTS    += -ffunction-sections
#CC_OPTS    += -fdata-sections
CC_OPTS    += -c -G0 -Werror

ifeq ($(BLT_TYPE),debug)
CC_OPTS    += -O0
CC_DEFS    += -D'MS_DEBUG'
else
CC_OPTS    += -Os
CC_DEFS    += -D'MS_OPTIMIZE'
endif
else
CC_OPTS     = -c
endif

# AS options:
ifeq ($(PARA),0)
AS_OPTS     = -mips32 -$(ENDIAN) -G0 -O2 -gdwarf2
endif


# LD options:
ifeq ($(TOOLCHAIN),mips-sde-elf)
LD_SCRIPT   = ecos_mipssde.ld
endif
ifeq ($(TOOLCHAIN),mipsisa32-elf)
LD_SCRIPT   = ecos_mipsisa32.ld
endif
LD_LIBS     = -L$(OS_LIB_DIR) -L$(CFG_STDLIB_DIR) -L$(BSP_DIR)/lib -T$(LD_SCRIPT) # libtarget.a, libgcc.a, UART+EMAC
#LD_OPTS     = $(CFG_LD_OPTS) -nostdlib -$(ENDIAN) --gc-sections -static -Map $(IMAGE_MAP)
LD_OPTS     = $(CFG_LD_OPTS) -$(ENDIAN) --gc-sections -static -Map $(IMAGE_MAP)







# **********************************************
# Rules
# **********************************************
.PHONY : all clean library package depend $(IMAGE_ELF)

# Project Build
ifeq ($(PARA),0)
all : setup makeImg
else
all : setup $(OBJ_C)
	@echo '  [Generate BDF finish ... ]'

endif

makeElf : $(IMAGE_ELF)

makeMI :
	@cp -f $(TRUNK)/cus_mstar/project/mstar_demo/pmlite_sram.dat $(DDI_MI_DIR)/cus_mstar/app/mi_demo/mi_pmlite_sram1.dat
	@touch -a $(DDI_MI_DIR)/cus_mstar/app/mi_demo/mi_pmlite_sram2.dat
	$(MAKE) -C $(TRUNK_MI)/mi setup
	$(MAKE) -C $(TRUNK_MI)/mi DDI_MISC_DIR=$(DDI_MISC_DIR)		
	@rm -f $(DDI_MI_DIR)/cus_mstar/app/mi_demo/mi_pmlite_sram1.dat
	@rm -f $(DDI_MI_DIR)/cus_mstar/app/mi_demo/mi_pmlite_sram2.dat

# makeImg : $(IMAGE_ELF) $(IMAGE_BIN)
makeImg : makeMI redefine_symbol $(IMAGE_ELF) $(IMAGE_BIN)

# Note: It's slow to produce .dis file w/o -gdwarf-2 set or original OS source code
makeImgInfo : $(IMAGE_ELF)
	$(OBJDUMP) -S $(IMAGE_ELF) > $(IMAGE_DIS);
	$(SIZE) $(IMAGE_ELF) > $(IMAGE_SIZ);
	$(NM) -a -S $(IMAGE_ELF) > $(IMAGE_SYM);

# Utility makefile for standalone library
makeFont : fontsetup fontlib

# Project Image Build

# Project Image Build
$(IMAGE_BIN) : $(IMAGE_ELF)
	$(OBJCOPY) -O binary $(IMAGE_ELF) $(IMAGE_BIN);

ifeq ($(PVR_BSP),enable)
$(IMAGE_ELF) : $(OBJ_C)
	@echo '  [LD] $@'
	@$(LD) -G0 $(LD_OPTS) -o $(IMAGE_ELF) $(OBJ_C) --start-group $(BSP_LIBS) $(OS_EX_BUILD_OBJ) $(MW_LIBS) $(DDI_MI_LIB) $(LD_LIBS) --end-group;
else ifeq ($(MM_BSP),enable)
$(IMAGE_ELF) : $(OBJ_C)
	@echo '  [LD] $@'
	@$(LD) -G0 $(LD_OPTS) -o $(IMAGE_ELF) $(OBJ_C) --start-group $(BSP_LIBS) $(OS_EX_BUILD_OBJ) $(DDI_MI_LIB) $(MW_LIBS) $(LD_LIBS) --end-group;
else
$(IMAGE_ELF) : $(OBJ_C)
	@echo '  [LD] $@'
	@$(LD) $(LD_OPTS) -o $(IMAGE_ELF) $(OBJ_C) --start-group $(BSP_LIBS) $(OS_EX_BUILD_OBJ) $(DDI_MI_LIB) $(MW_LIBS) $(LD_LIBS) --end-group
endif

# Project Source Build
$(OBJ_C) : $(OBJ_PATH)/%.o : %.c
	@echo '  [CC] $@'
	@$(CC) $(CC_OPTS) $(CC_DEFS) $(CC_INCS) -o $@ $<;

# Project Setup
setup : setup_sca
	-@mkdir -p $(OBJDIR) 2> /dev/null;
	-@mkdir -p $(BINDIR) 2> /dev/null;
	@echo "Make $(CHIP) $(PROJNAME) project...";
	@k=0; for i in $(BSP_LIBS); do j=`$(AR) t $$i | grep -ic 'hardfloat'`; if(($$j==0)); then k=1;echo $$i" use soft-float! Please use hard-float instead."; fi ; done ; if((k>0)); then false ; fi

ifeq ($(MI_SYS_MMAP_MODE), sca)
#1. Translate $(CHIP) all to lower case. ex:kenya
#2. Translate first char to Upper case. ex:Kenya
CHIP_NAME = $(shell echo $(CHIP) | sed 's/[A-Z]/\L&/g' | sed -n 's/^[a-z]/\U&/p' )
  ifeq ($(CFG_MEMORY_MAP),MMAP_32MB)
    SCA_FILE = MMAP_MI_$(CHIP_NAME)_32.h
    else ifeq ($(CFG_MEMORY_MAP),MMAP_64MB)
    SCA_FILE = MMAP_MI_$(CHIP_NAME)_64.h
  else ifeq ($(CFG_MEMORY_MAP),MMAP_128MB)
    SCA_FILE = MMAP_MI_$(CHIP_NAME)_128.h
    endif
setup_sca :
	@echo SCA_FILE=$(SCA_FILE)
	@cp $(SCA_FILE) MMAP_MI.h
else
setup_sca :
endif


redefine_symbol :
ifeq ($(SUBTITLE_BSP),enable)
	@mipsisa32-elf-objcopy --redefine-sym CLUTs=mm_CLUTs $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a
	@mipsisa32-elf-objdump -t $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a  | grep mm_CLUTs
	@mipsisa32-elf-objcopy --redefine-sym PixelBuffer=mm_PixelBuffer $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a
	@mipsisa32-elf-objdump -t $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a  | grep mm_PixelBuffer
	@mipsisa32-elf-objcopy --redefine-sym _u16_PES_length=mm_u16_PES_length $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a
	@mipsisa32-elf-objdump -t $(TRUNK)/cus_mstar/api/mm/libMStarSDK.a  | grep mm_u16_PES_length
endif

# Project Clean
clean :
	@echo "Clean $(CHIP) $(PROJNAME) project..."
	@rm -f -r $(OBJ_PATH)
	@rm -f -r $(BIN_PATH)
	@rm -f -r DDI_KELTIC_ECOS.bdf
	@echo "Clean $(CHIP) $(PROJNAME) ..."
	@$(MAKE) -C $(DDI_MI_DIR)/cus_mstar/mi clean

# Project Dependence
depend :
	$(CC) $(CC_OPTS) $(CC_DEFS) $(CC_INCS) -M $(SRC) > $(BIN_PATH)/depend.mk


# Project Dependence Full version
dep :
	$(CC) $(CC_OPTS) $(CC_DEFS) $(CC_INCS) -M $(SRC) > $(BIN_PATH)/depend.mk
	cat $(BIN_PATH)/depend.mk | sed -e 's/\(.*\)\.o/\$$\(OBJ_PATH\)\/\1.o/g' > depend.mk


-include depend.mk
