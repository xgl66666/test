
# User specified
TOOLCHAIN   = mipsisa32-elf
CHIP        = keltic
# User specified


# **********************************************
# Build Option
# **********************************************

#CFG_BOARD       = BD_KELTIC_FPGA
CFG_BOARD       = BD_MST183A_D01A_S
#CFG_DVB_TYPE    = INTERNAL_DVBT
CFG_DVB_TYPE    = DVBC

# **********************************************
# CHIP Configuration
# 183B Version (Could be MSD5XX7/MSD5XX9)
# 183A Vession (Could be MSD5XX5/MSD5XX3/MSD5XX1) for different MCP device
# **********************************************
ifeq ($(CFG_BOARD),BD_MST183B_D01A_S)
CFG_CHIP_SELECTION = MSD5XX9
else ifeq ($(CFG_BOARD),BD_MST183B_D01A)
CFG_CHIP_SELECTION = MSD5XX7
else
CFG_CHIP_SELECTION = MSD5XX5
endif


CFG_CC_DEFS = -D'MS_C_STDLIB'
CFG_CC_DEFS += -D'MS_BOARD_TYPE_SEL=$(CFG_BOARD)'
CFG_CC_DEFS += -D'MS_DVB_TYPE_SEL=$(CFG_DVB_TYPE)'
CFG_CC_DEFS += -D'ENABLE_DEBUG=1'
CFG_CC_DEFS += -D'STB_ENABLE=1'
CFG_CC_DEFS += -D'FBL_ENABLE=0'
CFG_CC_DEFS += -D'MBOOT_LOGO_ENABLE=0'
CFG_CC_DEFS += -D'CHIP_KELTIC'
CFG_CC_DEFS += -D'CFG_CHIP_$(CFG_CHIP_SELECTION)'

# **********************************************
# End Build Option
# **********************************************

#***************************************************
# Parasoft Check
#   ENABLE                      = 1
#   DISABLE                     = 0
#   CAT_BDF = 1 Default for Auto Test
#   Set to 0 for Local PARA unit test only,
#   makesure set the OS type to linux
#***************************************************
PARA=0
CAT_BDF=1

# **********************************************
# Build Configuration
# **********************************************

# Make Type: lib / exe / lint
MAKE_TYPE   ?= exe

# Link Type: static / dynamic(Linux)
LINK_TYPE   = static

# Build Type: debug / retail
BLT_TYPE    ?= retail

# Debug Level: Level 1(HAL), Level 2(Driver), Level 3(Middleware), Level 4(API), Level 5(Application)
DEBUGLEVEL  = 5

# MCU: aeon / mips4ke / mips34k
# TOOLCHAIN:
#   ELF: mips-sde-elf / aeon / mipsisa32-elf
#   Linux: mips-linux-gnu / mips2_fp_le
MCU_TYPE    = mips34k

# OS: ecos / linux / nos
OS_TYPE     = ecos

# Endianess: EL only
ENDIAN      = EL

# Chip: u2 / u3 / t2 / t3
CHIP        = keltic

# Project name
PROJNAME    = MSTAR

# Image name
IMAGENAME   = $(CHIP)_$(OS_TYPE)

# **********************************************
# End Build Configuration
# **********************************************

# NDS, TF, IRD, NGA, CNX, NONE
#CFG_CA      = NDS
CFG_CA      = NONE
# NDS(SVP), NONE
#CFG_NDS_LIB = NDS
CFG_NDS_LIB = NONE

# This config move to file configure_mstar_64MB and configure_mstar_32MB
# MM bsp:  enable / disable
# MM_BSP     = enable

# MI integraion interafces: enable / disable
MI_BSP = disable

# Frontend auto test : enable /disable
CFG_FE_AUTO_TEST = disable

# Smart IO polling by PM51 : enable /disable
CFG_SMC_IO_POLLING = disable
CFG_SMC_USE_51 = enable
# **********************************************
# Module Configuration
# **********************************************

# Configuration Type: Mstar / MpegSD# / LowPower
ifeq ($(CFG_CHIP_SELECTION),MSD5XX1)
CFG_CUST = Mstar_32MB
else
CFG_CUST = Mstar_64MB
endif

ifeq ($(MI_BSP), enable)
-include ./cus_config/configure_mi
endif

ifeq ($(CFG_CUST), Mstar_128MB)
-include ./cus_config/configure_mstar_128MB
else ifeq ($(CFG_CUST), Mstar_64MB)
-include ./cus_config/configure_mstar_64MB
else ifeq ($(CFG_CUST), Mstar_32MB)
-include ./cus_config/configure_mstar_32MB
#else ifeq ($(CFG_CUST), LowPower)
#-include ./cus_config/configure_lowpower
#else ifeq ($(CFG_CUST), H264SD)
#-include ./cus_config/configure_h264sd
else
-include ./cus_config/configure_mstar_64MB
endif

CFG_CC_OPTS = -D'CA_TYPE=$(CFG_CA)' -D'NDS_LIB=$(CFG_NDS_LIB)'
CFG_CC_OPTS += -DXRPC_MODULES_SERVER -DQC_svpldi -DQC_reset -DQC_qc_tests -DQC_nskldi -DQC_nskhal -DQC_harm_tests -DQC_cahdiver -DSOCKET_GLUE_SERVER
CFG_LD_OPTS =

ifeq ($(OS_TYPE),ecos)
CFG_CC_OPTS += -D'MSOS_TYPE_ECOS'
endif
ifeq ($(OS_TYPE),linux)
CFG_CC_OPTS += -D'MSOS_TYPE_LINUX'
endif
ifeq ($(OS_TYPE),nos)
CFG_CC_OPTS += -D'MSOS_TYPE_NOS'
endif
ifeq ($(OS_TYPE),ucos)
CFG_CC_OPTS += -D'MSOS_TYPE_UCOS'
endif

ifeq ($(PVR_BSP), enable)
CFG_CC_OPTS += -D'ENABLE_PVR_PACKAGE'
endif


ifeq ($(PVR_STATIC_MEM_ENABLE), enable)
CFG_CC_OPTS += -D'ENABLE_STATICMEM_PVR'
endif

ifeq ($(PVR_CA_ENABLE), enable)
CFG_CC_OPTS += -D'ENABLE_CAPVR=1'
else
CFG_CC_OPTS += -D'ENABLE_CAPVR=0'
endif

ifeq ($(MM_BSP), enable)
CFG_CC_OPTS += -D'ENABLE_MM_PACKAGE'
ifeq ($(CFG_TVfunc),TVfunc_MpegSD)
CFG_CC_OPTS += -D'MM_MPEG2SD_PROFILE'
endif
endif

ifeq ($(CFG_SMC_IO_POLLING), enable)
CFG_CC_OPTS += -D'DEMO_SMC_IO_POLLING=1'
else ifeq ($(CFG_SMC_IO_POLLING), disable)
CFG_CC_OPTS += -D'DEMO_SMC_IO_POLLING=0'
endif
ifeq ($(CFG_SMC_USE_51), enable)
CFG_CC_OPTS += -D'DEMO_SMC_USE_51=1'
else ifeq ($(CFG_SMC_USE_51), disable)
CFG_CC_OPTS += -D'DEMO_SMC_USE_51=0'
endif
#**************************************************************
# DRAM
#**************************************************************

# DDR freq
CFG_CC_OPTS += -D'CFG_DDR_FREQ = $(CFG_DDR_FREQ)'

# Memory Map
CFG_CC_OPTS += -D'MEMORY_MAP = $(CFG_MEMORY_MAP)'

#**************************************************************
# TV
#**************************************************************

# TV function
CFG_CC_OPTS += -D'TVfunc = $(CFG_TVfunc)'

#**************************************************************
# USB
#**************************************************************

# USB
ifeq ($(CFG_USB_ENABLE),enable)
CFG_CC_OPTS += -D'CFG_USB_ENABLE = 1'
else
CFG_CC_OPTS += -D'CFG_USB_ENABLE = 0'
endif

#**************************************************************
# Audio lib type
#**************************************************************

# Audio lib type
CFG_CC_OPTS += -D'AUDIO_LIB_TYPE = $(CFG_AUDIO_LIB_TYPE)'

#**************************************************************
# Auto Test
#**************************************************************

# Frontend auto test
ifeq ($(CFG_FE_AUTO_TEST),enable)
CFG_CC_OPTS += -D'FE_AUTO_TEST'
endif

# **********************************************
# Tool Chain Configuration
# **********************************************

ifeq ($(TOOLCHAIN),mips-sde-elf)
CFG_STDLIB_DIR = ../../../tools/mips-sde-elf/EL_mips32r2_mhard-float
CFG_CC_OPTS += -$(ENDIAN) -mips32r2 -gdwarf-2 -mhard-float
CFG_LD_OPTS += -$(ENDIAN) # -mhard-float
CFG_LINT    = ../../../tools/lint/mips-sde-elf_include
endif


#### OBSOLETE ####
ifeq ($(TOOLCHAIN),mipsisa32-elf)
CFG_STDLIB_DIR = ../../../tools/mipsisa32-elf/EL_mips32r2_mhard-float
CFG_CC_OPTS += -$(ENDIAN) -mips32 -gdwarf-2 -mhard-float
CFG_LD_OPTS += -$(ENDIAN)
CFG_AS_OPTS += -$(ENDIAN) -mips32 -gdwarf2
CFG_LINT    =
endif
#### OBSOLETE ####


ifeq ($(TOOLCHAIN),mips2_fp_le)
TOOLCHAIN   = mips2_fp_le-
CFG_STDLIB_DIR =
CFG_CC_OPTS += -mips32 -fPIC
CFG_LD_OPTS += -$(ENDIAN) -fPIC
CFG_LINT    =
endif


ifeq ($(TOOLCHAIN),mips-linux-gnu)
CFG_STDLIB_DIR =
CFG_CC_OPTS += -$(ENDIAN) -mips32 -gdwarf-2 -mhard-float -fPIC
CFG_LD_OPTS += -$(ENDIAN) -fPIC
CFG_LINT    = ../../../tools/lint/mips-linux-gnu_include
endif


ifeq ($(TOOLCHAIN),aeon)
CFG_STDLIB_DIR =
CFG_CC_OPTS += -$(ENDIAN) -mredzone-size=4 -mhard-mul -mhard-div
CFG_LD_OPTS +=
CFG_LINT    = ../../../tools/lint/aeon_include
endif

ifeq ($(PARA),1)
ifeq ($(CAT_BDF),1)
CXX         = cpptestscan --cpptestscanOutputFile=DDI_Keltic_eCos.bdf --cpptestscanProjectName=DDI_Keltic_eCos g++
CC          = cpptestscan --cpptestscanOutputFile=DDI_Keltic_eCos.bdf --cpptestscanProjectName=DDI_Keltic_eCos gcc
LD          = cpptestscan --cpptestscanOutputFile=DDI_Keltic_eCos.bdf --cpptestscanProjectName=DDI_Keltic_eCos ld
else
CXX         = cpptestscan --cpptestscanProjectName=unittest g++
CC          = cpptestscan --cpptestscanProjectName=unittest gcc
LD          = cpptestscan --cpptestscanProjectName=unittest ld
endif
else
CC          = $(TOOLCHAIN)-gcc
LD          = $(TOOLCHAIN)-ld
CXX         = $(TOOLCHAIN)-g++
endif

OBJCOPY     = $(TOOLCHAIN)-objcopy
OBJDUMP     = $(TOOLCHAIN)-objdump
SIZE        = $(TOOLCHAIN)-size
NM          = $(TOOLCHAIN)-nm
AR          = $(TOOLCHAIN)-ar
AS          = $(TOOLCHAIN)-as


